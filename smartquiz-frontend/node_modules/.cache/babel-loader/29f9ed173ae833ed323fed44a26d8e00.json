{"ast":null,"code":"import _classCallCheck from \"/home/rishabbakshi/Codebase/My Projects/Github/smartquiz-master/smartquiz-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rishabbakshi/Codebase/My Projects/Github/smartquiz-master/smartquiz-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rishabbakshi/Codebase/My Projects/Github/smartquiz-master/smartquiz-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rishabbakshi/Codebase/My Projects/Github/smartquiz-master/smartquiz-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rishabbakshi/Codebase/My Projects/Github/smartquiz-master/smartquiz-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rishabbakshi/Codebase/My Projects/Github/smartquiz-master/smartquiz-frontend/src/App.js\";\nimport React, { Fragment, Component } from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Sound from 'react-sound';\nimport homeMusic from './assets/media/home_2.mp3';\nimport sessionMusic from './assets/media/session.mp3';\nimport Navbar from './components/Navbar/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Session from './components/Session/Session';\nimport Profile from './components/Profile/Profile';\nvar initialState = {\n  route: \"login\",\n  music: {\n    home: {\n      position: 0,\n      status: \"STOPPED\"\n    },\n    session: {\n      position: 0,\n      status: \"STOPPED\"\n    }\n  },\n  userProfile: {\n    name: 'Rishab Bakshi',\n    email: \"rishabbakshi@gmail.com\",\n    points: 0,\n    joined: \"\",\n    stats: {\n      total_attempts: 0,\n      correct_attempts: 0,\n      times_played: 0\n    }\n  },\n  questions: {\n    active_category: {\n      id: 21,\n      name: \"Sports\"\n    },\n    categories: [{\n      \"id\": 9,\n      \"name\": \"General Knowledge\"\n    }, {\n      \"id\": 11,\n      \"name\": \"Movies\"\n    }, {\n      \"id\": 17,\n      \"name\": \"Science\"\n    }, {\n      \"id\": 21,\n      \"name\": \"Sports\"\n    }, // {\n    //   \"id\": 22,\n    //   \"name\": \"Geography\"\n    // },\n    // {\n    //   \"id\": 23,\n    //   \"name\": \"History\"\n    // },\n    {\n      \"id\": 26,\n      \"name\": \"Celebrities\"\n    }],\n    count: {\n      options: [10, 15, 20],\n      active: 10\n    }\n  },\n  session: {\n    stats: {\n      questions: 0,\n      correct: 0\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.onRouteChange = function (route, params) {\n      if (route === \"session\") {\n        if (params.id) {\n          _this.setState(Object.assign(_this.state.questions.active_category, params));\n\n          console.log(_this.state);\n        } // this.setState(Object.assign(this.state.music.home, { status: \"STOPPED\" }))\n        // this.setState(Object.assign(this.state.music.session, { status: \"PLAYING\" }))\n\n      }\n\n      if (route === 'signout') {\n        _this.setState(initialState);\n\n        console.log(\"Changing route to \", route, _this.state);\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        }); // this.setState(Object.assign(this.state.music.home, { status: \"PLAYING\" }))\n        // this.setState(Object.assign(this.state.music.session, { status: \"STOPPED\" }))\n\n\n        console.log(\"Changing route to \", route, _this.state);\n      } else if (route === 'profile') {\n        fetchUpdateProfile();\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.fetchUpdateProfile = function () {\n      fetch('http:localhost:3009/update_stats', {\n        method: 'GET',\n        headers: {\n          'Content-Type': \"application/json\"\n        },\n        body: JSON.stringify({\n          email: _this.state.userProfile.email\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (userProfileData) {\n        _this.setState(Object.assign(_this.userProfile.stats, {\n          total_attempts: userProfileData.total_attempts,\n          correct_attempts: userProfileData.correct_attempts,\n          times_played: times_played\n        }));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.updateQuestionCount = function (count) {\n      _this.setState(Object.assign(_this.state.questions.count, {\n        active: count\n      }));\n    };\n\n    _this.loadUser = function (user) {\n      _this.setState(Object.assign(_this.state.userProfile, {\n        name: user.name,\n        email: user.email,\n        joined_at: user.joined\n      }));\n\n      console.log(\"Loaded User: \", _this.state.userProfile);\n    };\n\n    _this.backToHome = function () {\n      console.log(_this.state.userProfile); // PUT the stats data online\n      // fetch('http:localhost:3009/update_stats', {\n      //     method: 'PUT',\n      //     headers: {\n      //         'Content-Type': \"application/json\"\n      //     },\n      //     body: JSON.stringify({\n      //         id: this.props.appState.userProfile.id,\n      //         stats: {\n      //             questions_attempted: this.props.appState.userProfile.stats.questions_attempted,                    \n      //             correctly_answered: this.props.appState.userProfile.stats.correctly_answered\n      //         }\n      //     })\n      // })\n      // .then(res => res.json())\n      // .then(updatedUserData => {\n      // })\n      // .catch(err => console.log(err));\n\n      _this.onRouteChange('home');\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var route = this.state.route;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, route === 'home' ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        appState: this.state,\n        onGoingBack: this.backToHome,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Sound, {\n        url: homeMusic,\n        playStatus: \"PLAYING\",\n        playFromPosition: 0,\n        loop: true,\n        volume: 75 // onStop={this.onSessionMusicStop}\n        // onLoading={this.handleSongLoading}\n        // onPlaying={this.handleSongPlaying}\n        // onFinishedPlaying={this.handleSongFinishedPlaying}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(Home, {\n        appState: this.state,\n        onRouteChange: this.onRouteChange,\n        name: this.state.userProfile.name,\n        updateQuestionCount: this.updateQuestionCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })) : route === 'session' ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        appState: this.state,\n        onGoingBack: this.backToHome,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(Sound, {\n        id: \"sessionMusic\",\n        url: sessionMusic // playStatus={this.state.music.session.status}\n        ,\n        playStatus: \"PLAYING\",\n        playFromPosition: 0,\n        loop: true,\n        volume: 75,\n        onStop: this.onSessionMusicStop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(Session, {\n        appState: this.state,\n        onRouteChange: this.onRouteChange,\n        backToHome: this.backToHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })) : route === \"profile\" ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        appState: this.state,\n        onGoingBack: this.backToHome,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(Profile, {\n        appState: this.state,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })) : route === \"register\" ? React.createElement(Register, {\n        appState: this.state,\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        appState: this.state,\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/rishabbakshi/Codebase/My Projects/Github/smartquiz-master/smartquiz-frontend/src/App.js"],"names":["React","Fragment","Component","Sound","homeMusic","sessionMusic","Navbar","Footer","Home","Login","Register","Session","Profile","initialState","route","music","home","position","status","session","userProfile","name","email","points","joined","stats","total_attempts","correct_attempts","times_played","questions","active_category","id","categories","count","options","active","correct","App","onRouteChange","params","setState","Object","assign","state","console","log","isSignedIn","fetchUpdateProfile","fetch","method","headers","body","JSON","stringify","then","res","json","userProfileData","catch","err","updateQuestionCount","loadUser","user","joined_at","backToHome","onSessionMusicStop"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport './App.css';\n\nimport 'tachyons';\nimport Sound from 'react-sound';\nimport homeMusic from './assets/media/home_2.mp3';\nimport sessionMusic from './assets/media/session.mp3';\n\nimport Navbar from './components/Navbar/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Session from './components/Session/Session';\nimport Profile from './components/Profile/Profile';\n\nconst initialState = {\n  route: \"login\",\n  music: {\n    home: {\n      position: 0,\n      status: \"STOPPED\"\n    },\n    session: {\n      position: 0,\n      status: \"STOPPED\"\n    }\n  },\n  userProfile: {\n    name: 'Rishab Bakshi',\n    email: \"rishabbakshi@gmail.com\",\n    points: 0,\n    joined: \"\",\n    stats: {\n      total_attempts: 0,\n      correct_attempts: 0,\n      times_played: 0\n    }\n  },\n  questions: {\n    active_category: {\n      id: 21,\n      name: \"Sports\"\n    },\n    categories: [\n      {\n        \"id\": 9,\n        \"name\": \"General Knowledge\"\n      },\n      {\n        \"id\": 11,\n        \"name\": \"Movies\"\n      },\n      {\n        \"id\": 17,\n        \"name\": \"Science\"\n      },\n      {\n        \"id\": 21,\n        \"name\": \"Sports\"\n      },\n      // {\n      //   \"id\": 22,\n      //   \"name\": \"Geography\"\n      // },\n      // {\n      //   \"id\": 23,\n      //   \"name\": \"History\"\n      // },\n      {\n        \"id\": 26,\n        \"name\": \"Celebrities\"\n      },\n    ],\n    count: {\n      options: [10,15,20],\n      active: 10\n    }\n  },\n  session: {\n    stats: {\n      questions: 0,\n      correct: 0\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = initialState;\n  }\n\n  onRouteChange = (route, params) => {\n    if (route === \"session\") {\n      if (params.id) {\n        this.setState(Object.assign(this.state.questions.active_category, params));        \n        console.log(this.state);\n      }\n      // this.setState(Object.assign(this.state.music.home, { status: \"STOPPED\" }))\n      // this.setState(Object.assign(this.state.music.session, { status: \"PLAYING\" }))\n    }\n    if (route === 'signout') {\n      this.setState(initialState)\n      console.log(\"Changing route to \", route, this.state)\n\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n      // this.setState(Object.assign(this.state.music.home, { status: \"PLAYING\" }))\n      // this.setState(Object.assign(this.state.music.session, { status: \"STOPPED\" }))\n      console.log(\"Changing route to \", route, this.state)\n    }\n    else if(route === 'profile'){\n      fetchUpdateProfile();\n    }\n\n    this.setState({ route: route })\n  }\n\n  fetchUpdateProfile = () => {\n    fetch('http:localhost:3009/update_stats', {\n        method: 'GET',\n        headers: {\n            'Content-Type': \"application/json\"\n        },\n        body: JSON.stringify({\n            email: this.state.userProfile.email\n        })\n    })\n    .then(res => res.json())\n    .then(userProfileData => {\n      this.setState(Object.assign(this.userProfile.stats, \n        {\n          total_attempts: userProfileData.total_attempts,\n          correct_attempts: userProfileData.correct_attempts,\n          times_played: times_played\n        }))\n    })\n    .catch(err => console.log(err));\n  }\n\n  updateQuestionCount = (count) => {\n    this.setState(Object.assign(this.state.questions.count, { active: count }))\n  }\n\n  loadUser = (user) => {\n    this.setState(Object.assign(this.state.userProfile, {\n      name: user.name,\n      email: user.email,\n      joined_at: user.joined\n    }))\n    console.log(\"Loaded User: \", this.state.userProfile)\n  }\n\n  backToHome = () => {\n    console.log(this.state.userProfile)\n    // PUT the stats data online\n    // fetch('http:localhost:3009/update_stats', {\n    //     method: 'PUT',\n    //     headers: {\n    //         'Content-Type': \"application/json\"\n    //     },\n    //     body: JSON.stringify({\n    //         id: this.props.appState.userProfile.id,\n    //         stats: {\n    //             questions_attempted: this.props.appState.userProfile.stats.questions_attempted,                    \n    //             correctly_answered: this.props.appState.userProfile.stats.correctly_answered\n    //         }\n    //     })\n    // })\n    // .then(res => res.json())\n    // .then(updatedUserData => {\n\n    // })\n    // .catch(err => console.log(err));\n\n    this.onRouteChange('home')\n}\n\n  render() {\n\n    const { route } = this.state;\n\n    return (\n      <div className=\"App\">\n        {\n          (route === 'home') ?\n            <Fragment>\n              <Navbar appState={this.state} onGoingBack={this.backToHome} onRouteChange={this.onRouteChange}/>\n              <Sound\n                url={homeMusic}\n                playStatus=\"PLAYING\"\n                playFromPosition={0}\n                loop={true}\n                volume={75}\n              // onStop={this.onSessionMusicStop}\n              // onLoading={this.handleSongLoading}\n              // onPlaying={this.handleSongPlaying}\n              // onFinishedPlaying={this.handleSongFinishedPlaying}\n              />\n              <Home appState={this.state} onRouteChange={this.onRouteChange} name={this.state.userProfile.name} updateQuestionCount={this.updateQuestionCount} />\n              <Footer />\n            </Fragment>\n            : (route === 'session') ?\n              <Fragment>\n                <Navbar appState={this.state}  onGoingBack={this.backToHome} onRouteChange={this.onRouteChange}/>\n                <Sound\n                  id=\"sessionMusic\"\n                  url={sessionMusic}\n                  // playStatus={this.state.music.session.status}\n                  playStatus=\"PLAYING\"\n                  playFromPosition={0}\n                  loop={true}\n                  volume={75}\n                  onStop={this.onSessionMusicStop}\n                />\n                <Session appState={this.state} onRouteChange={this.onRouteChange} backToHome={this.backToHome}/>\n                <Footer />\n              </Fragment>\n\n              : (route === \"profile\") ? \n              <Fragment>\n                <Navbar appState={this.state}  onGoingBack={this.backToHome} onRouteChange={this.onRouteChange}/>   \n                <Profile appState={this.state} onRouteChange={this.onRouteChange} />\n                <Footer />\n              </Fragment>\n                : (route === \"register\") ? <Register appState={this.state} onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n                  : <Login appState={this.state} onRouteChange={this.onRouteChange}  loadUser={this.loadUser}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}